@page "/"
@attribute [Authorize]

@using Chinook.ClientModels;
@using Chinook.Services.Interface;
@using Microsoft.EntityFrameworkCore;

<PageTitle>Index</PageTitle>

<h1>Artists</h1>

<input type="text" id="artistName" class="form-control" @oninput="(e) => searchBy(e)"
       placeholder="Type three characters of artist to beign search with" @bind="@AuthorName">

<br />

@if (Artists == null)
{
    <Loading />
}
else
{
    <table class="table table-striped table-hover table-sm">
        <thead>
            <tr>
                <th>Name</th>
                <th>Number of albums</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var artist in Artists)
            {
                <tr>
                    <td><a href="Artist/@artist.ArtistId">@artist.Name</a></td>
                    <td>@artist.AlbumCount</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Artist> Artists;
    [Inject] IArtistService Service { get; set; }
    [Inject] IDbContextFactory<ChinookContext> DbFactory { get; set; }
    [Parameter] public string? AuthorName { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await InvokeAsync(StateHasChanged);
        await GetData(null);
    }

    public async Task searchBy(Microsoft.AspNetCore.Components.ChangeEventArgs args)
    {
        string name = (string)args?.Value ?? "";
        if (name?.Trim()?.Length == 0 || name?.Trim()?.Length >= 3)
            await GetData(name.Trim());
    }

    public async Task GetData(String searchTerm)
    {
        Artists = await Service.GetAdvancedDet(x => String.IsNullOrEmpty(searchTerm) ||
            x.Name.ToLower().Contains(searchTerm.ToLower()));
    }
}
